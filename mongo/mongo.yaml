kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: mongodb-sc
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-mongo-0
spec:
  capacity:
    storage: 200Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongodb-sc
  local:
    path: /tmp/tock-mongo/mongo-0
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kind-control-plane
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-mongo-1
spec:
  capacity:
    storage: 200Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongodb-sc
  local:
    path: /tmp/tock-mongo/mongo-1
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kind-control-plane
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-mongo-2
spec:
  capacity:
    storage: 200Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongodb-sc
  local:
    path: /tmp/tock-mongo/mongo-2
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kind-control-plane
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc-mongo-0
spec:
  storageClassName: mongodb-sc
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc-mongo-1
spec:
  storageClassName: mongodb-sc
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc-mongo-2
spec:
  storageClassName: mongodb-sc
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        type: mongo
        app: mongo
        selector: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:3.6.5
          volumeMounts:
            - name: mongodb-conf
              mountPath: /config
              readOnly: true
            - name: mongo-pvc
              mountPath: /data/db
          command: ["mongod"]
          args: ["--smallfiles", "--bind_ip_all", "--port", "27017", "--replSet", "tock"]
      volumes:
        - name: mongodb-conf
          configMap:
            name: mongodb-cm
            items:
              - key: mongo.conf
                path: mongo.conf
  volumeClaimTemplates:
    - metadata:
        name: mongo-pvc
      spec:
        storageClassName: mongodb-sc
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 50Mi